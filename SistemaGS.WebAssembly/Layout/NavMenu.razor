@inject IAyudaService ayudaService;
<!--implements IDisposable;-->
@inject NavigationManager navManager;
@inject AuthenticationStateProvider authenticationStateProvider;


<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <p class="navbar-brand">SistemaGS</p>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                <!---->
                <div class="p-1"></div>
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>

        <AuthorizeView Roles="Administrador">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Usuarios">
                    <i class="bi bi-person-badge-fill p-2" aria-hidden="true"></i> Usuarios
                </NavLink>
            </div>
        </AuthorizeView>

        <AuthorizeView Roles="Administrador, Asistente, Lector">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="Personas">
                    <span class="oi oi-people p-2" aria-hidden="true"></span> Personas
                </NavLink>
            </div>
        </AuthorizeView>

        <AuthorizeView Roles="Solicitante">
            @{
                int IdUsuario = Convert.ToInt32(@context.User.Claims.Where(u => u.Type == ClaimTypes.NameIdentifier).Select(c => c.Value).SingleOrDefault()!);
            }
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="@($"Usuario/{@IdUsuario}")">
                    <span class="oi oi-people p-2" aria-hidden="true"></span> Usuarios
                </NavLink>
            </div>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}

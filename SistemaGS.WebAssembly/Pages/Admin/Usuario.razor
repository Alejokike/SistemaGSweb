@page "/Usuario"
@page "/Usuario/{Id:int}"

@inject IUsuarioService usuarioService
@inject IToastService toastService;
@inject NavigationManager _navService;

<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@Titulo</p>
</div>

<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">
        <EditForm Model="model" OnValidSubmit="GuardarCambios">

            <DataAnnotationsValidator> </DataAnnotationsValidator>

            <div class="input-group">
                <span class="input-group-text bg-light" id="basic-addon3">Nombre Completo</span>
                <input type="text" class="form-control" @bind-value="model.NombreCompleto">
            </div>
            <ValidationMessage For="@(() => model.NombreCompleto)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Nombre de Usuario</span>
                <input type="text" class="form-control" @bind-value="model.NombreUsuario">
            </div>
            <ValidationMessage For="@(() => model.NombreUsuario)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Correo</span>
                <input type="text" class="form-control" @bind-value="model.Correo"><br />
            </div>
            <ValidationMessage For="@(() => model.Correo)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Contraseña</span>
                <input type="password" class="form-control" @bind-value="model.Clave">
            </div>
            <ValidationMessage For="@(() => model.Clave)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Confirmar Contraseña</span>
                <input type="password" class="form-control" @bind-value="model.ConfirmarClave">
            </div>
            <ValidationMessage For="@(() => model.ConfirmarClave)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@Boton</button>
                <a href="/usuarios" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>


    </div>

</div>

@code {
    [Parameter] 
    public int ID { get; set; }
    private string Titulo = "Nuevo usuario";
    private string Boton = "Crear";
    private UsuarioDTO model = new UsuarioDTO();

    protected override async Task OnParametersSetAsync()
    {
        if(ID != 0)
        {
            Titulo = "Editar Usuario";
            Boton = "Actualizar";

            var response = await usuarioService.Obtener(ID);
            if (response.EsCorrecto)
            {
                model = (UsuarioDTO) response.Resultado!;
                model.ConfirmarClave = model.Clave;
            }
            else
            {
                toastService.ShowWarning(response.Mensaje!);
            }
        }
    }

    private async Task GuardarCambios()
    {
        if(model.Clave != model.ConfirmarClave)
        {
            toastService.ShowWarning("Las contraseñas no coinciden");
            return;
        }

        bool respuesta = true;
        string mensaje = string.Empty;

        if(ID != 0)
        {
            var response = await usuarioService.Editar(model);
            if (response.EsCorrecto)
            {
                mensaje = "Usuario modificado";
            }
            else
            {
                respuesta = false;
                mensaje = "No se pudo editar";
            }
        }
        else
        {
            model.IdRol = 1;
            var response = await usuarioService.Crear(model);
            if (response.EsCorrecto)
            {
                mensaje = "Usuario creado";
            }
            else
            {
                respuesta = false;
                mensaje = "No se pudo crear";
            }
        }

        if (respuesta)
        {
            toastService.ShowSuccess(mensaje);
            _navService.NavigateTo("/Usuarios");
        }
        else toastService.ShowWarning(mensaje);
    }
}

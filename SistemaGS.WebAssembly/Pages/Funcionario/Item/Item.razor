@page "/Item"
@page "/Item/{ID:int}"

@inject IPersonaService personaService
@inject IToastService toastService;
@inject NavigationManager _navService;
@inject AuthenticationStateProvider authenticationStateProvider;

@attribute [Authorize(Roles = "Administrador, Solicitante")]

<BlazoredToasts />

<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@Titulo</p>
</div>

<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">
        <EditForm Model="model" OnValidSubmit="GuardarCambios">

            <DataAnnotationsValidator> </DataAnnotationsValidator>

            <div class="input-group">
                <span class="input-group-text bg-light" id="basic-addon3">Cédula</span>
                <input type="text" class="form-control" @bind-value="model.Cedula">
            </div>
            <ValidationMessage For="@(() => model.Cedula)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Nombre</span>
                <input type="text" class="form-control" @bind-value="model.Nombre">
            </div>
            <ValidationMessage For="@(() => model.Nombre)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Apellido</span>
                <input type="text" class="form-control" @bind-value="model.Apellido">
            </div>
            <ValidationMessage For="@(() => model.Apellido)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Fecha de nacimiento</span>
                <input type="date" max="@DateTime.Today.ToString("yyyy-MM-dd")" class="form-control" id="birthdaytime" name="birthdaytime" @bind-value="model.FechaNacimiento">
            </div>
            <ValidationMessage For="@(() => model.FechaNacimiento)" />

            @{
                bool cmas = model.Genero == "M";
                bool cfem = model.Genero == "F";
                if (cmas == false && cfem == false) cmas = true;

                <div class="mt-3">
                    <label class="form-label d-block">Género</label>
                    <InputRadioGroup @bind-value="model.Genero">
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" checked="@cmas" name="genero" id="generoMasculino" value="M">
                            <label class="form-check-label" for="generoMasculino">Masculino</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" checked="@cfem" name="genero" id="generoFemenino" value="F">
                            <label class="form-check-label" for="generoFemenino">Femenino</label>
                        </div>
                    </InputRadioGroup>
                </div>
                <ValidationMessage For="@(() => model.Genero)" />
            }

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Profesión</span>
                <input type="text" class="form-control" @bind-value="model.Profesion">
            </div>
            <ValidationMessage For="@(() => model.Profesion)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Ocupación</span>
                <input type="text" class="form-control" @bind-value="model.Ocupacion">
            </div>
            <ValidationMessage For="@(() => model.Ocupacion)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Lugar de trabajo</span>
                <input type="text" class="form-control" @bind-value="model.LugarTrabajo">
            </div>
            <ValidationMessage For="@(() => model.LugarTrabajo)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Dirección de Trabajo</span>
                <input type="text" class="form-control" @bind-value="model.DireccionTrabajo">
            </div>
            <ValidationMessage For="@(() => model.DireccionTrabajo)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Teléfono de trabajo</span>
                <input type="text" class="form-control" @bind-value="model.TelefonoTrabajo">
            </div>
            <ValidationMessage For="@(() => model.TelefonoTrabajo)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Dirección de habitación</span>
                <input type="text" class="form-control" @bind-value="model.DireccionHabitacion">
            </div>
            <ValidationMessage For="@(() => model.DireccionHabitacion)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Teléfono de habitación</span>
                <input type="text" class="form-control" @bind-value="model.TelefonoHabitacion">
            </div>
            <ValidationMessage For="@(() => model.TelefonoHabitacion)" />

            <AuthorizeView Roles="Administrador" Context="AltRol">
                <div class="form-check form-switch mt-3">
                    <label class="form-check-label" for="userStatusSwitch">Solicitante </label>
                    <input class="form-check-input" type="checkbox" role="switch" id="userStatusSwitch" @bind="model.Solicitante">
                </div>

                <div class="form-check form-switch mt-3">
                    <label class="form-check-label" for="userStatusSwitch">Beneficiario </label>
                    <input class="form-check-input" type="checkbox" role="switch" id="userStatusSwitch" @bind="model.Beneficiario">
                </div>

                <div class="form-check form-switch mt-3">
                    <label class="form-check-label" for="userStatusSwitch">Funcionario </label>
                    <input class="form-check-input" type="checkbox" role="switch" id="userStatusSwitch" @bind="model.Funcionario">
                    <span class="ms-2">
                    </span>
                </div>
            </AuthorizeView>

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@Boton</button>
                <a href="/personas" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int Cedula { get; set; }
    private string Titulo = "Nuevo";
    private string Boton = "Crear";
    private PersonaDTO model = new PersonaDTO();

    protected override async Task OnParametersSetAsync()
    {
        if (Cedula != 0)
        {
            Titulo = "Editar";
            Boton = "Actualizar";

            var response = await personaService.Obtener(Cedula);
            if (response.EsCorrecto)
            {
                model = response.Resultado!;
            }
            else
            {
                toastService.ShowWarning(response.Mensaje!);
            }
        }
    }

    private async Task GuardarCambios()
    {
        bool respuesta = true;
        string mensaje = string.Empty;

        if (Cedula != 0)
        {
            var response = await personaService.Editar(model, Cedula);
            if (response.EsCorrecto)
            {
                mensaje = "Registro modificado";
            }
            else
            {
                respuesta = false;
                mensaje = "No se pudo editar";
            }
        }
        else
        {
            var response = await personaService.Crear(model);
            if (response.EsCorrecto)
            {
                mensaje = "Registro creado";
            }
            else
            {
                respuesta = false;
                mensaje = "No se pudo crear";
            }
        }

        if (respuesta)
        {
            toastService.ShowSuccess(mensaje);
            _navService.NavigateTo("/Personas");
        }
        else
        {
            toastService.ShowWarning(mensaje);
        }
    }
}